2. Which of the following HTTP request methods should not alter the state of the server?

-- GET
-- POST
-- PATCH
-- PUT

3. What is the most true about a garbage collector?

4. When is it safe to trust external parameters received by your web-server?

5. What does the following code do? 
    ( replaces 'dog' with 'cat' through a string)

6. What is value of a when code is done running?

    a = [1, 2, 3]
    Process.fork do 
      a.push(4)
      a.push(5)
    end 
    a.push(4)

    (has a been cloned?)

7. Say you work for a startup that has hit hockey stick growth. You need to horizontally scale the database to support the increased usage. What are the trade-offs between replicating vs. sharding your database?

    --that is, when to shard vs. replicate a database

8. What happens when you try to compile and run the following code? 

    class A {
        public void print() {
            System.out.println("A);
        }
    }

    class B extends A {
        public void print() {
            System.out.println("B);
        }
    }

    class Main {
        public static void main(String[] args) {
            A a = new B();
            a.print();
        }
    }

    -- what does it print out, or does it fail to compile?

9. SQuestion 9 out of about 35 Sup,. you work for a search engine company, and you would like to figure out the top 50 terms most frequently queried yesterday You have query logs in plain text that are stored on thousands of computers. Which of the following approach sounds most reasonable to do this? 
Select the correct answer: 
Redis is superfast and has built-In support for Incrementing counters.Vou could write a small applIcation to process tKequery logs. Inerement.counter of each term In a Rec. Instance,ancl.en use a special Redls command.find the top 50 values. 

This a good use case for mapReduce.Vou could wr.a mapper to process tKe logs and a reducer.aggregate the results.

Relational database Is tKe best choice fa-finding top N results.Vou could wr.a small application.processquery logs.wiltethe counterÂ°, eachterm Into a relational database.and then use a simple SqLpuery to find the re.it. 

Search engines store all the terms user queries In an Inverted Index.You can directlyearact the Information from the Intlex 

10. Fill in the missing line of code:

  what does for i in range() do? and what does .append do?

11. What is the value of x? 

    x = sum([x*x for x in [1, 2, 3]]) 

12. What's one advantage that a dynamic array has over a linked list? 

    -- Dynamicarrays work better In concurrent environments.Rather than lockIng every node.you only need to lock the single list.
    -- An array list allows fast (constant time) inserts, while a linked list takes linear time. 
    -- A linked list Is actually superior to an array list,  but It's harder to Implement correctly.ln most cases, dynamic array Is sufficient 
    -- The binary search algorithm can run over a (sorted) array list, but can't run over a linked list 

13. What is the relationship between HTTP and HTTPS? 

    -- How does SSL or TLS fit in here? What about encryption? 

14. What's wrong with this code? 

    using malloc ; looks like only single column?

15. What is the value of the variable names after the following code runs? 

    function deleteBlankItems(items) {
        for (var i = 0; i < items.length; i++) {
            if(items[i].length == 0) {
                items.splice(i, 1);
            }
        }
    }

    var names = ['Rachel', '', 'Meghana', '', '', 'Tim'];
    deleteBlankItems(names);

    answer: ["Rachel", "Meghana", "", "Tim"]  (correct)

16. What is the value of x?

    matrix = Array.new
    matrix.push([1, 2, 3])
    matrix.push([4, 5, 6])
    matrix.push([7, 8, 9])

    x = matrix[0][2] + matrix[2][1]

17. In which of the following uses would a read-write lock most outperform a simple mutex?

    --to control access to a dynamic list class in a read-heavy concurrent environment.
    --to control access to a database from a cluster of worker processes.
    --to control access to a dynamic list class in a write-heavy concurrent environment.
    --to control access to a critical section of very short duration (will be locked very briefly).

18. What is the value of the variable tree after the following code runs?

  def build_word_tree_from_sentences(sentence_list) 
    root = {}
    sentence_list.each do |sentence|
      base = root
      sentence.split(' ').each do |word| 
        base[word] ||= {}
        base = base[word]
      end 
    end 
    root
  end 

  tree = build_word_tree_from_sentences(["Hello world", "Hello there"])

  19. What will the following code print? 

    for(var i = 0; i < 10; i++) {
        setTimeout(function() {
            console.log(i);
        }, 1000);
    }

    10, 10 times

20. What's a sticky session? 

21. What is the missing if statement? 

    import os 
    def child():
      print('\nA new child ', os.getpid())
      os.exit(0)
    
    def parent():
      newpid = os.fork()
      if newpid == 0: 
        child()
      else: 
        pids = (os.getpid(), newpid)
        print("parent: %d, child: %d\n" % pids)
      input("wait from input")

    parent()


    newpid < 0, newpid == 0, newpid > 0, newpid != 0


    22. Which one of the following CPU registers holds the address of the instructions (instructions in the program stored in memory) to be executed next?

        accumulator, memory address register, program counter, memory buffer register

    23. What's wrong with this code? 
        def get_all_div_tag_contents(html_text):
            result = []
            html_tag_regex = "<([\w]+)([^>]*?)(([\s]*\/>)" + \"|(\>((([^\<]*?|<\!\-\-.*?\-\->)|(?R))*)\<\/\1[\s]*\>))"
            for tag_tuple in re.findall(html_tag_regex, html_text):
                result.append(tag_tuple[5])
            return result
